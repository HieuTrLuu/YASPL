-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Grammar.y
-----------------------------------------------------------------------------

state 24 contains 11 shift/reduce conflicts and 23 reduce/reduce conflicts.
state 51 contains 26 shift/reduce conflicts.
state 109 contains 15 shift/reduce conflicts.

rule 20 is unused

terminal '&&' is unused
terminal '||' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseStreamLang -> Prog                     (0)
	Prog ->                                            (1)
	Prog -> Sect Prog                                  (2)
	Sect -> int '+' '{' Block '}'                      (3)
	Sect -> int '-' int '{' Block '}'                  (4)
	Sect -> int '{' Block '}'                          (5)
	Sect -> string '{' Block '}'                       (6)
	Block -> Statement Block                           (7)
	Block -> Statement                                 (8)
	Statement -> return Expr                           (9)
	Statement -> Assignment                            (10)happy_var_2
	Assignment -> string '=' Expr                      (11)
	Assignment -> string '+=' Expr                     (12)
	Assignment -> string '-=' Expr                     (13)
	Assignment -> string '*=' Expr                     (14)
	Assignment -> string '/=' Expr                     (15)
	Expr -> int                                        (16)
	Expr -> float                                      (17)
	Expr -> true                                       (18)
	Expr -> false                                      (19)
	Expr -> string                                     (20)
	Expr -> '[' Conts ']'                              (21)
	Expr -> '(' Expr ',' Expr ')'                      (22)
	Expr -> ident                                      (23)
	Expr -> Expr '+' Expr                              (24)
	Expr -> Expr '-' Expr                              (25)
	Expr -> Expr '*' Expr                              (26)
	Expr -> Expr '/' Expr                              (27)
	Expr -> Expr '^' Expr                              (28)
	Expr -> Expr '%' Expr                              (29)
	Expr -> Expr ':' Expr                              (30)
	Expr -> Expr '++' Expr                             (31)
	Expr -> '(' Expr ')'                               (32)
	Expr -> if Expr then Expr else Expr                (33)
	Expr -> lam string '->' Expr                       (34)
	Expr -> Expr '<' Expr                              (35)
	Expr -> Expr '>' Expr                              (36)
	Expr -> Expr '<=' Expr                             (37)
	Expr -> Expr '>=' Expr                             (38)
	Expr -> Expr '==' Expr                             (39)
	Expr -> Expr '!=' Expr                             (40)
	Expr -> string Args                                (41)
	Expr -> Expr '!!' Expr                             (42)
	Expr -> '{' Expr '|' PredList '}'                  (43)
	Conts ->                                           (44)
	Conts -> Expr ',' Conts                            (45)
	Args ->                                            (46)
	Args -> Expr Args                                  (47)
	PredList -> Pred                                   (48)
	PredList -> Pred ',' PredList                      (49)
	Pred -> Expr '<-' Expr                             (50)
	Pred -> Expr                                       (51)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	lam            { T _ TokenLambda }
	string         { T _ (TokenString $$) }
	ident          { T _ (TokenIdent $$) }
	int            { T _ (TokenInt $$) }
	float          { T _ (TokenFloat $$) }
	true           { T _ TokenTrue }
	false          { T _ TokenFalse }
	return         { T _ TokenReturn }
	if             { T _ TokenIf }
	then           { T _ TokenThen }
	else           { T _ TokenElse }
	'++'           { T _ TokenDoubleAdd }
	'=='           { T _ TokenDoubleEqual }
	'!='           { T _ TokenNotEqual }
	'&&'           { T _ TokenAnd }
	'||'           { T _ TokenOr }
	'+='           { T _ TokenAddEqual }
	'-='           { T _ TokenSubEqual }
	'*='           { T _ TokenMultEqual }
	'/='           { T _ TokenDivEqual }
	'!!'           { T _ TokenIndex }
	'<-'           { T _ TokenMember }
	'->'           { T _ TokenArrow }
	'<='           { T _ TokenLessEqual }
	'>='           { T _ TokenMoreEqual }
	':'            { T _ TokenCons }
	'>'            { T _ TokenMore }
	'<'            { T _ TokenLess }
	'+'            { T _ TokenAdd }
	'-'            { T _ TokenSub }
	'*'            { T _ TokenMult }
	'/'            { T _ TokenDiv }
	'%'            { T _ TokenMod }
	'^'            { T _ TokenExponent }
	'='            { T _ TokenEqual }
	'('            { T _ TokenLParen }
	')'            { T _ TokenRParen }
	'['            { T _ TokenLList }
	']'            { T _ TokenRList }
	'{'            { T _ TokenLBlock }
	'}'            { T _ TokenRBlock }
	'|'            { T _ TokenLine }
	','            { T _ TokenComma }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseStreamLang rule  0
	Prog            rules 1, 2
	Sect            rules 3, 4, 5, 6
	Block           rules 7, 8
	Statement       rules 9, 10
	Assignment      rules 11, 12, 13, 14, 15
	Expr            rules 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43
	Conts           rules 44, 45
	Args            rules 46, 47
	PredList        rules 48, 49
	Pred            rules 50, 51

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	string         shift, and enter state 4
	int            shift, and enter state 5
	%eof           reduce using rule 1

	Prog           goto state 2
	Sect           goto state 3

State 1




State 2

	%start_parseStreamLang -> Prog .                    (rule 0)

	%eof           accept


State 3

	Prog -> Sect . Prog                                 (rule 2)

	string         shift, and enter state 4
	int            shift, and enter state 5
	%eof           reduce using rule 1

	Prog           goto state 10
	Sect           goto state 3

State 4

	Sect -> string . '{' Block '}'                      (rule 6)

	'{'            shift, and enter state 9


State 5

	Sect -> int . '+' '{' Block '}'                     (rule 3)
	Sect -> int . '-' int '{' Block '}'                 (rule 4)
	Sect -> int . '{' Block '}'                         (rule 5)

	'+'            shift, and enter state 6
	'-'            shift, and enter state 7
	'{'            shift, and enter state 8


State 6

	Sect -> int '+' . '{' Block '}'                     (rule 3)

	'{'            shift, and enter state 18


State 7

	Sect -> int '-' . int '{' Block '}'                 (rule 4)

	int            shift, and enter state 17


State 8

	Sect -> int '{' . Block '}'                         (rule 5)

	string         shift, and enter state 14
	return         shift, and enter state 15

	Block          goto state 16
	Statement      goto state 12
	Assignment     goto state 13

State 9

	Sect -> string '{' . Block '}'                      (rule 6)

	string         shift, and enter state 14
	return         shift, and enter state 15

	Block          goto state 11
	Statement      goto state 12
	Assignment     goto state 13

State 10

	Prog -> Sect Prog .                                 (rule 2)

	%eof           reduce using rule 2


State 11

	Sect -> string '{' Block . '}'                      (rule 6)

	'}'            shift, and enter state 40


State 12

	Block -> Statement . Block                          (rule 7)
	Block -> Statement .                                (rule 8)

	string         shift, and enter state 14
	return         shift, and enter state 15
	'}'            reduce using rule 8

	Block          goto state 39
	Statement      goto state 12
	Assignment     goto state 13

State 13

	Statement -> Assignment .                           (rule 10)

	string         reduce using rule 10
	return         reduce using rule 10
	'}'            reduce using rule 10


State 14

	Assignment -> string . '=' Expr                     (rule 11)
	Assignment -> string . '+=' Expr                    (rule 12)
	Assignment -> string . '-=' Expr                    (rule 13)
	Assignment -> string . '*=' Expr                    (rule 14)
	Assignment -> string . '/=' Expr                    (rule 15)

	'+='           shift, and enter state 34
	'-='           shift, and enter state 35
	'*='           shift, and enter state 36
	'/='           shift, and enter state 37
	'='            shift, and enter state 38


State 15

	Statement -> return . Expr                          (rule 9)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 22

State 16

	Sect -> int '{' Block . '}'                         (rule 5)

	'}'            shift, and enter state 21


State 17

	Sect -> int '-' int . '{' Block '}'                 (rule 4)

	'{'            shift, and enter state 20


State 18

	Sect -> int '+' '{' . Block '}'                     (rule 3)

	string         shift, and enter state 14
	return         shift, and enter state 15

	Block          goto state 19
	Statement      goto state 12
	Assignment     goto state 13

State 19

	Sect -> int '+' '{' Block . '}'                     (rule 3)

	'}'            shift, and enter state 70


State 20

	Sect -> int '-' int '{' . Block '}'                 (rule 4)

	string         shift, and enter state 14
	return         shift, and enter state 15

	Block          goto state 69
	Statement      goto state 12
	Assignment     goto state 13

State 21

	Sect -> int '{' Block '}' .                         (rule 5)

	string         reduce using rule 5
	int            reduce using rule 5
	%eof           reduce using rule 5


State 22

	Statement -> return Expr .                          (rule 9)
	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	string         reduce using rule 9
	return         reduce using rule 9
	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<='           shift, and enter state 58
	'>='           shift, and enter state 59
	':'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<'            shift, and enter state 62
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'}'            reduce using rule 9


State 23

	Expr -> lam . string '->' Expr                      (rule 34)

	string         shift, and enter state 53


State 24

	Expr -> string .                                    (rule 20)
	Expr -> string . Args                               (rule 41)

	lam            shift, and enter state 23
			(reduce using rule 46)
			(reduce using rule 20)

	string         shift, and enter state 24
			(reduce using rule 46)
			(reduce using rule 20)

	ident          shift, and enter state 25
			(reduce using rule 46)
			(reduce using rule 20)

	int            shift, and enter state 26
			(reduce using rule 46)
			(reduce using rule 20)

	float          shift, and enter state 27
			(reduce using rule 46)
			(reduce using rule 20)

	true           shift, and enter state 28
			(reduce using rule 46)
			(reduce using rule 20)

	false          shift, and enter state 29
			(reduce using rule 46)
			(reduce using rule 20)

	return         reduce using rule 46
			(reduce using rule 20)

	if             shift, and enter state 30
			(reduce using rule 46)
			(reduce using rule 20)

	then           reduce using rule 46
			(reduce using rule 20)

	else           reduce using rule 46
			(reduce using rule 20)

	'++'           reduce using rule 46
			(reduce using rule 20)

	'=='           reduce using rule 46
			(reduce using rule 20)

	'!='           reduce using rule 46
			(reduce using rule 20)

	'!!'           reduce using rule 46
			(reduce using rule 20)

	'<-'           reduce using rule 46
			(reduce using rule 20)

	'<='           reduce using rule 46
			(reduce using rule 20)

	'>='           reduce using rule 46
			(reduce using rule 20)

	':'            reduce using rule 46
			(reduce using rule 20)

	'>'            reduce using rule 46
			(reduce using rule 20)

	'<'            reduce using rule 46
			(reduce using rule 20)

	'+'            reduce using rule 46
			(reduce using rule 20)

	'-'            reduce using rule 46
			(reduce using rule 20)

	'*'            reduce using rule 46
			(reduce using rule 20)

	'/'            reduce using rule 46
			(reduce using rule 20)

	'%'            reduce using rule 46
			(reduce using rule 20)

	'^'            reduce using rule 46
			(reduce using rule 20)

	'('            shift, and enter state 31
			(reduce using rule 46)
			(reduce using rule 20)

	')'            reduce using rule 46
			(reduce using rule 20)

	'['            shift, and enter state 32
			(reduce using rule 46)
			(reduce using rule 20)

	'{'            shift, and enter state 33
			(reduce using rule 46)
			(reduce using rule 20)

	'}'            reduce using rule 46
			(reduce using rule 20)

	'|'            reduce using rule 46
			(reduce using rule 20)

	','            reduce using rule 46
			(reduce using rule 20)


	Expr           goto state 51
	Args           goto state 52

State 25

	Expr -> ident .                                     (rule 23)

	lam            reduce using rule 23
	string         reduce using rule 23
	ident          reduce using rule 23
	int            reduce using rule 23
	float          reduce using rule 23
	true           reduce using rule 23
	false          reduce using rule 23
	return         reduce using rule 23
	if             reduce using rule 23
	then           reduce using rule 23
	else           reduce using rule 23
	'++'           reduce using rule 23
	'=='           reduce using rule 23
	'!='           reduce using rule 23
	'!!'           reduce using rule 23
	'<-'           reduce using rule 23
	'<='           reduce using rule 23
	'>='           reduce using rule 23
	':'            reduce using rule 23
	'>'            reduce using rule 23
	'<'            reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23
	'%'            reduce using rule 23
	'^'            reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	'['            reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	'|'            reduce using rule 23
	','            reduce using rule 23


State 26

	Expr -> int .                                       (rule 16)

	lam            reduce using rule 16
	string         reduce using rule 16
	ident          reduce using rule 16
	int            reduce using rule 16
	float          reduce using rule 16
	true           reduce using rule 16
	false          reduce using rule 16
	return         reduce using rule 16
	if             reduce using rule 16
	then           reduce using rule 16
	else           reduce using rule 16
	'++'           reduce using rule 16
	'=='           reduce using rule 16
	'!='           reduce using rule 16
	'!!'           reduce using rule 16
	'<-'           reduce using rule 16
	'<='           reduce using rule 16
	'>='           reduce using rule 16
	':'            reduce using rule 16
	'>'            reduce using rule 16
	'<'            reduce using rule 16
	'+'            reduce using rule 16
	'-'            reduce using rule 16
	'*'            reduce using rule 16
	'/'            reduce using rule 16
	'%'            reduce using rule 16
	'^'            reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	'['            reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	'|'            reduce using rule 16
	','            reduce using rule 16


State 27

	Expr -> float .                                     (rule 17)

	lam            reduce using rule 17
	string         reduce using rule 17
	ident          reduce using rule 17
	int            reduce using rule 17
	float          reduce using rule 17
	true           reduce using rule 17
	false          reduce using rule 17
	return         reduce using rule 17
	if             reduce using rule 17
	then           reduce using rule 17
	else           reduce using rule 17
	'++'           reduce using rule 17
	'=='           reduce using rule 17
	'!='           reduce using rule 17
	'!!'           reduce using rule 17
	'<-'           reduce using rule 17
	'<='           reduce using rule 17
	'>='           reduce using rule 17
	':'            reduce using rule 17
	'>'            reduce using rule 17
	'<'            reduce using rule 17
	'+'            reduce using rule 17
	'-'            reduce using rule 17
	'*'            reduce using rule 17
	'/'            reduce using rule 17
	'%'            reduce using rule 17
	'^'            reduce using rule 17
	'('            reduce using rule 17
	')'            reduce using rule 17
	'['            reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	'|'            reduce using rule 17
	','            reduce using rule 17


State 28

	Expr -> true .                                      (rule 18)

	lam            reduce using rule 18
	string         reduce using rule 18
	ident          reduce using rule 18
	int            reduce using rule 18
	float          reduce using rule 18
	true           reduce using rule 18
	false          reduce using rule 18
	return         reduce using rule 18
	if             reduce using rule 18
	then           reduce using rule 18
	else           reduce using rule 18
	'++'           reduce using rule 18
	'=='           reduce using rule 18
	'!='           reduce using rule 18
	'!!'           reduce using rule 18
	'<-'           reduce using rule 18
	'<='           reduce using rule 18
	'>='           reduce using rule 18
	':'            reduce using rule 18
	'>'            reduce using rule 18
	'<'            reduce using rule 18
	'+'            reduce using rule 18
	'-'            reduce using rule 18
	'*'            reduce using rule 18
	'/'            reduce using rule 18
	'%'            reduce using rule 18
	'^'            reduce using rule 18
	'('            reduce using rule 18
	')'            reduce using rule 18
	'['            reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	'|'            reduce using rule 18
	','            reduce using rule 18


State 29

	Expr -> false .                                     (rule 19)

	lam            reduce using rule 19
	string         reduce using rule 19
	ident          reduce using rule 19
	int            reduce using rule 19
	float          reduce using rule 19
	true           reduce using rule 19
	false          reduce using rule 19
	return         reduce using rule 19
	if             reduce using rule 19
	then           reduce using rule 19
	else           reduce using rule 19
	'++'           reduce using rule 19
	'=='           reduce using rule 19
	'!='           reduce using rule 19
	'!!'           reduce using rule 19
	'<-'           reduce using rule 19
	'<='           reduce using rule 19
	'>='           reduce using rule 19
	':'            reduce using rule 19
	'>'            reduce using rule 19
	'<'            reduce using rule 19
	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            reduce using rule 19
	'/'            reduce using rule 19
	'%'            reduce using rule 19
	'^'            reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19
	'['            reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	'|'            reduce using rule 19
	','            reduce using rule 19


State 30

	Expr -> if . Expr then Expr else Expr               (rule 33)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 50

State 31

	Expr -> '(' . Expr ',' Expr ')'                     (rule 22)
	Expr -> '(' . Expr ')'                              (rule 32)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 49

State 32

	Expr -> '[' . Conts ']'                             (rule 21)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	']'            reduce using rule 44
	'{'            shift, and enter state 33

	Expr           goto state 47
	Conts          goto state 48

State 33

	Expr -> '{' . Expr '|' PredList '}'                 (rule 43)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 46

State 34

	Assignment -> string '+=' . Expr                    (rule 12)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 45

State 35

	Assignment -> string '-=' . Expr                    (rule 13)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 44

State 36

	Assignment -> string '*=' . Expr                    (rule 14)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 43

State 37

	Assignment -> string '/=' . Expr                    (rule 15)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 42

State 38

	Assignment -> string '=' . Expr                     (rule 11)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 41

State 39

	Block -> Statement Block .                          (rule 7)

	'}'            reduce using rule 7


State 40

	Sect -> string '{' Block '}' .                      (rule 6)

	string         reduce using rule 6
	int            reduce using rule 6
	%eof           reduce using rule 6


State 41

	Assignment -> string '=' Expr .                     (rule 11)
	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	string         reduce using rule 11
	return         reduce using rule 11
	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<='           shift, and enter state 58
	'>='           shift, and enter state 59
	':'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<'            shift, and enter state 62
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'}'            reduce using rule 11


State 42

	Assignment -> string '/=' Expr .                    (rule 15)
	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	string         reduce using rule 15
	return         reduce using rule 15
	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<='           shift, and enter state 58
	'>='           shift, and enter state 59
	':'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<'            shift, and enter state 62
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'}'            reduce using rule 15


State 43

	Assignment -> string '*=' Expr .                    (rule 14)
	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	string         reduce using rule 14
	return         reduce using rule 14
	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<='           shift, and enter state 58
	'>='           shift, and enter state 59
	':'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<'            shift, and enter state 62
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'}'            reduce using rule 14


State 44

	Assignment -> string '-=' Expr .                    (rule 13)
	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	string         reduce using rule 13
	return         reduce using rule 13
	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<='           shift, and enter state 58
	'>='           shift, and enter state 59
	':'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<'            shift, and enter state 62
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'}'            reduce using rule 13


State 45

	Assignment -> string '+=' Expr .                    (rule 12)
	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	string         reduce using rule 12
	return         reduce using rule 12
	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<='           shift, and enter state 58
	'>='           shift, and enter state 59
	':'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<'            shift, and enter state 62
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'}'            reduce using rule 12


State 46

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)
	Expr -> '{' Expr . '|' PredList '}'                 (rule 43)

	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<='           shift, and enter state 58
	'>='           shift, and enter state 59
	':'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<'            shift, and enter state 62
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'|'            shift, and enter state 94


State 47

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)
	Conts -> Expr . ',' Conts                           (rule 45)

	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<='           shift, and enter state 58
	'>='           shift, and enter state 59
	':'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<'            shift, and enter state 62
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	','            shift, and enter state 93


State 48

	Expr -> '[' Conts . ']'                             (rule 21)

	']'            shift, and enter state 92


State 49

	Expr -> '(' Expr . ',' Expr ')'                     (rule 22)
	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> '(' Expr . ')'                              (rule 32)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<='           shift, and enter state 58
	'>='           shift, and enter state 59
	':'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<'            shift, and enter state 62
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	')'            shift, and enter state 90
	','            shift, and enter state 91


State 50

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> if Expr . then Expr else Expr               (rule 33)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	then           shift, and enter state 89
	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<='           shift, and enter state 58
	'>='           shift, and enter state 59
	':'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<'            shift, and enter state 62
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68


State 51

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)
	Args -> Expr . Args                                 (rule 47)

	lam            shift, and enter state 23
			(reduce using rule 46)

	string         shift, and enter state 24
			(reduce using rule 46)

	ident          shift, and enter state 25
			(reduce using rule 46)

	int            shift, and enter state 26
			(reduce using rule 46)

	float          shift, and enter state 27
			(reduce using rule 46)

	true           shift, and enter state 28
			(reduce using rule 46)

	false          shift, and enter state 29
			(reduce using rule 46)

	return         reduce using rule 46
	if             shift, and enter state 30
			(reduce using rule 46)

	then           reduce using rule 46
	else           reduce using rule 46
	'++'           shift, and enter state 54
			(reduce using rule 46)

	'=='           shift, and enter state 55
			(reduce using rule 46)

	'!='           shift, and enter state 56
			(reduce using rule 46)

	'!!'           shift, and enter state 57
			(reduce using rule 46)

	'<-'           reduce using rule 46
	'<='           shift, and enter state 58
			(reduce using rule 46)

	'>='           shift, and enter state 59
			(reduce using rule 46)

	':'            shift, and enter state 60
			(reduce using rule 46)

	'>'            shift, and enter state 61
			(reduce using rule 46)

	'<'            shift, and enter state 62
			(reduce using rule 46)

	'+'            shift, and enter state 63
			(reduce using rule 46)

	'-'            shift, and enter state 64
			(reduce using rule 46)

	'*'            shift, and enter state 65
			(reduce using rule 46)

	'/'            shift, and enter state 66
			(reduce using rule 46)

	'%'            shift, and enter state 67
			(reduce using rule 46)

	'^'            shift, and enter state 68
			(reduce using rule 46)

	'('            shift, and enter state 31
			(reduce using rule 46)

	')'            reduce using rule 46
	'['            shift, and enter state 32
			(reduce using rule 46)

	'{'            shift, and enter state 33
			(reduce using rule 46)

	'}'            reduce using rule 46
	'|'            reduce using rule 46
	','            reduce using rule 46

	Expr           goto state 51
	Args           goto state 88

State 52

	Expr -> string Args .                               (rule 41)

	lam            reduce using rule 41
	string         reduce using rule 41
	ident          reduce using rule 41
	int            reduce using rule 41
	float          reduce using rule 41
	true           reduce using rule 41
	false          reduce using rule 41
	return         reduce using rule 41
	if             reduce using rule 41
	then           reduce using rule 41
	else           reduce using rule 41
	'++'           reduce using rule 41
	'=='           reduce using rule 41
	'!='           reduce using rule 41
	'!!'           reduce using rule 41
	'<-'           reduce using rule 41
	'<='           reduce using rule 41
	'>='           reduce using rule 41
	':'            reduce using rule 41
	'>'            reduce using rule 41
	'<'            reduce using rule 41
	'+'            reduce using rule 41
	'-'            reduce using rule 41
	'*'            reduce using rule 41
	'/'            reduce using rule 41
	'%'            reduce using rule 41
	'^'            reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'['            reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	'|'            reduce using rule 41
	','            reduce using rule 41


State 53

	Expr -> lam string . '->' Expr                      (rule 34)

	'->'           shift, and enter state 87


State 54

	Expr -> Expr '++' . Expr                            (rule 31)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 86

State 55

	Expr -> Expr '==' . Expr                            (rule 39)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 85

State 56

	Expr -> Expr '!=' . Expr                            (rule 40)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 84

State 57

	Expr -> Expr '!!' . Expr                            (rule 42)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 83

State 58

	Expr -> Expr '<=' . Expr                            (rule 37)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 82

State 59

	Expr -> Expr '>=' . Expr                            (rule 38)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 81

State 60

	Expr -> Expr ':' . Expr                             (rule 30)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 80

State 61

	Expr -> Expr '>' . Expr                             (rule 36)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 79

State 62

	Expr -> Expr '<' . Expr                             (rule 35)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 78

State 63

	Expr -> Expr '+' . Expr                             (rule 24)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 77

State 64

	Expr -> Expr '-' . Expr                             (rule 25)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 76

State 65

	Expr -> Expr '*' . Expr                             (rule 26)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 75

State 66

	Expr -> Expr '/' . Expr                             (rule 27)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 74

State 67

	Expr -> Expr '%' . Expr                             (rule 29)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 73

State 68

	Expr -> Expr '^' . Expr                             (rule 28)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 72

State 69

	Sect -> int '-' int '{' Block . '}'                 (rule 4)

	'}'            shift, and enter state 71


State 70

	Sect -> int '+' '{' Block '}' .                     (rule 3)

	string         reduce using rule 3
	int            reduce using rule 3
	%eof           reduce using rule 3


State 71

	Sect -> int '-' int '{' Block '}' .                 (rule 4)

	string         reduce using rule 4
	int            reduce using rule 4
	%eof           reduce using rule 4


State 72

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr '^' Expr .                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	lam            reduce using rule 28
	string         reduce using rule 28
	ident          reduce using rule 28
	int            reduce using rule 28
	float          reduce using rule 28
	true           reduce using rule 28
	false          reduce using rule 28
	return         reduce using rule 28
	if             reduce using rule 28
	then           reduce using rule 28
	else           reduce using rule 28
	'++'           reduce using rule 28
	'=='           reduce using rule 28
	'!='           reduce using rule 28
	'!!'           reduce using rule 28
	'<-'           reduce using rule 28
	'<='           reduce using rule 28
	'>='           reduce using rule 28
	':'            reduce using rule 28
	'>'            reduce using rule 28
	'<'            reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	'%'            reduce using rule 28
	'^'            shift, and enter state 68
	'('            reduce using rule 28
	')'            reduce using rule 28
	'['            reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	'|'            reduce using rule 28
	','            reduce using rule 28


State 73

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr '%' Expr .                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	lam            reduce using rule 29
	string         reduce using rule 29
	ident          reduce using rule 29
	int            reduce using rule 29
	float          reduce using rule 29
	true           reduce using rule 29
	false          reduce using rule 29
	return         reduce using rule 29
	if             reduce using rule 29
	then           reduce using rule 29
	else           reduce using rule 29
	'++'           reduce using rule 29
	'=='           reduce using rule 29
	'!='           reduce using rule 29
	'!!'           reduce using rule 29
	'<-'           reduce using rule 29
	'<='           reduce using rule 29
	'>='           reduce using rule 29
	':'            reduce using rule 29
	'>'            reduce using rule 29
	'<'            reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	'%'            reduce using rule 29
	'^'            shift, and enter state 68
	'('            reduce using rule 29
	')'            reduce using rule 29
	'['            reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	'|'            reduce using rule 29
	','            reduce using rule 29


State 74

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr '/' Expr .                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	lam            reduce using rule 27
	string         reduce using rule 27
	ident          reduce using rule 27
	int            reduce using rule 27
	float          reduce using rule 27
	true           reduce using rule 27
	false          reduce using rule 27
	return         reduce using rule 27
	if             reduce using rule 27
	then           reduce using rule 27
	else           reduce using rule 27
	'++'           reduce using rule 27
	'=='           reduce using rule 27
	'!='           reduce using rule 27
	'!!'           reduce using rule 27
	'<-'           reduce using rule 27
	'<='           reduce using rule 27
	'>='           reduce using rule 27
	':'            reduce using rule 27
	'>'            reduce using rule 27
	'<'            reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'('            reduce using rule 27
	')'            reduce using rule 27
	'['            reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	'|'            reduce using rule 27
	','            reduce using rule 27


State 75

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr '*' Expr .                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	lam            reduce using rule 26
	string         reduce using rule 26
	ident          reduce using rule 26
	int            reduce using rule 26
	float          reduce using rule 26
	true           reduce using rule 26
	false          reduce using rule 26
	return         reduce using rule 26
	if             reduce using rule 26
	then           reduce using rule 26
	else           reduce using rule 26
	'++'           reduce using rule 26
	'=='           reduce using rule 26
	'!='           reduce using rule 26
	'!!'           reduce using rule 26
	'<-'           reduce using rule 26
	'<='           reduce using rule 26
	'>='           reduce using rule 26
	':'            reduce using rule 26
	'>'            reduce using rule 26
	'<'            reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'('            reduce using rule 26
	')'            reduce using rule 26
	'['            reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	'|'            reduce using rule 26
	','            reduce using rule 26


State 76

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr '-' Expr .                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	lam            reduce using rule 25
	string         reduce using rule 25
	ident          reduce using rule 25
	int            reduce using rule 25
	float          reduce using rule 25
	true           reduce using rule 25
	false          reduce using rule 25
	return         reduce using rule 25
	if             reduce using rule 25
	then           reduce using rule 25
	else           reduce using rule 25
	'++'           reduce using rule 25
	'=='           reduce using rule 25
	'!='           reduce using rule 25
	'!!'           reduce using rule 25
	'<-'           reduce using rule 25
	'<='           reduce using rule 25
	'>='           reduce using rule 25
	':'            reduce using rule 25
	'>'            reduce using rule 25
	'<'            reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'('            reduce using rule 25
	')'            reduce using rule 25
	'['            reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	'|'            reduce using rule 25
	','            reduce using rule 25


State 77

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr '+' Expr .                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	lam            reduce using rule 24
	string         reduce using rule 24
	ident          reduce using rule 24
	int            reduce using rule 24
	float          reduce using rule 24
	true           reduce using rule 24
	false          reduce using rule 24
	return         reduce using rule 24
	if             reduce using rule 24
	then           reduce using rule 24
	else           reduce using rule 24
	'++'           reduce using rule 24
	'=='           reduce using rule 24
	'!='           reduce using rule 24
	'!!'           reduce using rule 24
	'<-'           reduce using rule 24
	'<='           reduce using rule 24
	'>='           reduce using rule 24
	':'            reduce using rule 24
	'>'            reduce using rule 24
	'<'            reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'('            reduce using rule 24
	')'            reduce using rule 24
	'['            reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	'|'            reduce using rule 24
	','            reduce using rule 24


State 78

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr '<' Expr .                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	lam            reduce using rule 35
	string         reduce using rule 35
	ident          reduce using rule 35
	int            reduce using rule 35
	float          reduce using rule 35
	true           reduce using rule 35
	false          reduce using rule 35
	return         reduce using rule 35
	if             reduce using rule 35
	then           reduce using rule 35
	else           reduce using rule 35
	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<-'           reduce using rule 35
	'<='           fail
	'>='           fail
	':'            shift, and enter state 60
	'>'            fail
	'<'            fail
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'('            reduce using rule 35
	')'            reduce using rule 35
	'['            reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	'|'            reduce using rule 35
	','            reduce using rule 35


State 79

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr '>' Expr .                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	lam            reduce using rule 36
	string         reduce using rule 36
	ident          reduce using rule 36
	int            reduce using rule 36
	float          reduce using rule 36
	true           reduce using rule 36
	false          reduce using rule 36
	return         reduce using rule 36
	if             reduce using rule 36
	then           reduce using rule 36
	else           reduce using rule 36
	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<-'           reduce using rule 36
	'<='           fail
	'>='           fail
	':'            shift, and enter state 60
	'>'            fail
	'<'            fail
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'('            reduce using rule 36
	')'            reduce using rule 36
	'['            reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	'|'            reduce using rule 36
	','            reduce using rule 36


State 80

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr ':' Expr .                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	lam            reduce using rule 30
	string         reduce using rule 30
	ident          reduce using rule 30
	int            reduce using rule 30
	float          reduce using rule 30
	true           reduce using rule 30
	false          reduce using rule 30
	return         reduce using rule 30
	if             reduce using rule 30
	then           reduce using rule 30
	else           reduce using rule 30
	'++'           reduce using rule 30
	'=='           reduce using rule 30
	'!='           reduce using rule 30
	'!!'           shift, and enter state 57
	'<-'           reduce using rule 30
	'<='           reduce using rule 30
	'>='           reduce using rule 30
	':'            shift, and enter state 60
	'>'            reduce using rule 30
	'<'            reduce using rule 30
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'('            reduce using rule 30
	')'            reduce using rule 30
	'['            reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	'|'            reduce using rule 30
	','            reduce using rule 30


State 81

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr '>=' Expr .                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	lam            reduce using rule 38
	string         reduce using rule 38
	ident          reduce using rule 38
	int            reduce using rule 38
	float          reduce using rule 38
	true           reduce using rule 38
	false          reduce using rule 38
	return         reduce using rule 38
	if             reduce using rule 38
	then           reduce using rule 38
	else           reduce using rule 38
	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<-'           reduce using rule 38
	'<='           fail
	'>='           fail
	':'            shift, and enter state 60
	'>'            fail
	'<'            fail
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'('            reduce using rule 38
	')'            reduce using rule 38
	'['            reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	'|'            reduce using rule 38
	','            reduce using rule 38


State 82

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr '<=' Expr .                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	lam            reduce using rule 37
	string         reduce using rule 37
	ident          reduce using rule 37
	int            reduce using rule 37
	float          reduce using rule 37
	true           reduce using rule 37
	false          reduce using rule 37
	return         reduce using rule 37
	if             reduce using rule 37
	then           reduce using rule 37
	else           reduce using rule 37
	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<-'           reduce using rule 37
	'<='           fail
	'>='           fail
	':'            shift, and enter state 60
	'>'            fail
	'<'            fail
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'('            reduce using rule 37
	')'            reduce using rule 37
	'['            reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	'|'            reduce using rule 37
	','            reduce using rule 37


State 83

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)
	Expr -> Expr '!!' Expr .                            (rule 42)

	lam            reduce using rule 42
	string         reduce using rule 42
	ident          reduce using rule 42
	int            reduce using rule 42
	float          reduce using rule 42
	true           reduce using rule 42
	false          reduce using rule 42
	return         reduce using rule 42
	if             reduce using rule 42
	then           reduce using rule 42
	else           reduce using rule 42
	'++'           reduce using rule 42
	'=='           reduce using rule 42
	'!='           reduce using rule 42
	'!!'           shift, and enter state 57
	'<-'           reduce using rule 42
	'<='           reduce using rule 42
	'>='           reduce using rule 42
	':'            reduce using rule 42
	'>'            reduce using rule 42
	'<'            reduce using rule 42
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'('            reduce using rule 42
	')'            reduce using rule 42
	'['            reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	'|'            reduce using rule 42
	','            reduce using rule 42


State 84

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr '!=' Expr .                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	lam            reduce using rule 40
	string         reduce using rule 40
	ident          reduce using rule 40
	int            reduce using rule 40
	float          reduce using rule 40
	true           reduce using rule 40
	false          reduce using rule 40
	return         reduce using rule 40
	if             reduce using rule 40
	then           reduce using rule 40
	else           reduce using rule 40
	'++'           shift, and enter state 54
	'=='           fail
	'!='           fail
	'!!'           shift, and enter state 57
	'<-'           reduce using rule 40
	'<='           reduce using rule 40
	'>='           reduce using rule 40
	':'            shift, and enter state 60
	'>'            reduce using rule 40
	'<'            reduce using rule 40
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'('            reduce using rule 40
	')'            reduce using rule 40
	'['            reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	'|'            reduce using rule 40
	','            reduce using rule 40


State 85

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr '==' Expr .                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	lam            reduce using rule 39
	string         reduce using rule 39
	ident          reduce using rule 39
	int            reduce using rule 39
	float          reduce using rule 39
	true           reduce using rule 39
	false          reduce using rule 39
	return         reduce using rule 39
	if             reduce using rule 39
	then           reduce using rule 39
	else           reduce using rule 39
	'++'           shift, and enter state 54
	'=='           fail
	'!='           fail
	'!!'           shift, and enter state 57
	'<-'           reduce using rule 39
	'<='           reduce using rule 39
	'>='           reduce using rule 39
	':'            shift, and enter state 60
	'>'            reduce using rule 39
	'<'            reduce using rule 39
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'('            reduce using rule 39
	')'            reduce using rule 39
	'['            reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	'|'            reduce using rule 39
	','            reduce using rule 39


State 86

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr '++' Expr .                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	lam            reduce using rule 31
	string         reduce using rule 31
	ident          reduce using rule 31
	int            reduce using rule 31
	float          reduce using rule 31
	true           reduce using rule 31
	false          reduce using rule 31
	return         reduce using rule 31
	if             reduce using rule 31
	then           reduce using rule 31
	else           reduce using rule 31
	'++'           reduce using rule 31
	'=='           reduce using rule 31
	'!='           reduce using rule 31
	'!!'           shift, and enter state 57
	'<-'           reduce using rule 31
	'<='           reduce using rule 31
	'>='           reduce using rule 31
	':'            shift, and enter state 60
	'>'            reduce using rule 31
	'<'            reduce using rule 31
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'('            reduce using rule 31
	')'            reduce using rule 31
	'['            reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	'|'            reduce using rule 31
	','            reduce using rule 31


State 87

	Expr -> lam string '->' . Expr                      (rule 34)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 101

State 88

	Args -> Expr Args .                                 (rule 47)

	lam            reduce using rule 47
	string         reduce using rule 47
	ident          reduce using rule 47
	int            reduce using rule 47
	float          reduce using rule 47
	true           reduce using rule 47
	false          reduce using rule 47
	return         reduce using rule 47
	if             reduce using rule 47
	then           reduce using rule 47
	else           reduce using rule 47
	'++'           reduce using rule 47
	'=='           reduce using rule 47
	'!='           reduce using rule 47
	'!!'           reduce using rule 47
	'<-'           reduce using rule 47
	'<='           reduce using rule 47
	'>='           reduce using rule 47
	':'            reduce using rule 47
	'>'            reduce using rule 47
	'<'            reduce using rule 47
	'+'            reduce using rule 47
	'-'            reduce using rule 47
	'*'            reduce using rule 47
	'/'            reduce using rule 47
	'%'            reduce using rule 47
	'^'            reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'['            reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47
	'|'            reduce using rule 47
	','            reduce using rule 47


State 89

	Expr -> if Expr then . Expr else Expr               (rule 33)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 100

State 90

	Expr -> '(' Expr ')' .                              (rule 32)

	lam            reduce using rule 32
	string         reduce using rule 32
	ident          reduce using rule 32
	int            reduce using rule 32
	float          reduce using rule 32
	true           reduce using rule 32
	false          reduce using rule 32
	return         reduce using rule 32
	if             reduce using rule 32
	then           reduce using rule 32
	else           reduce using rule 32
	'++'           reduce using rule 32
	'=='           reduce using rule 32
	'!='           reduce using rule 32
	'!!'           reduce using rule 32
	'<-'           reduce using rule 32
	'<='           reduce using rule 32
	'>='           reduce using rule 32
	':'            reduce using rule 32
	'>'            reduce using rule 32
	'<'            reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'*'            reduce using rule 32
	'/'            reduce using rule 32
	'%'            reduce using rule 32
	'^'            reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'['            reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	'|'            reduce using rule 32
	','            reduce using rule 32


State 91

	Expr -> '(' Expr ',' . Expr ')'                     (rule 22)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 99

State 92

	Expr -> '[' Conts ']' .                             (rule 21)

	lam            reduce using rule 21
	string         reduce using rule 21
	ident          reduce using rule 21
	int            reduce using rule 21
	float          reduce using rule 21
	true           reduce using rule 21
	false          reduce using rule 21
	return         reduce using rule 21
	if             reduce using rule 21
	then           reduce using rule 21
	else           reduce using rule 21
	'++'           reduce using rule 21
	'=='           reduce using rule 21
	'!='           reduce using rule 21
	'!!'           reduce using rule 21
	'<-'           reduce using rule 21
	'<='           reduce using rule 21
	'>='           reduce using rule 21
	':'            reduce using rule 21
	'>'            reduce using rule 21
	'<'            reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	'%'            reduce using rule 21
	'^'            reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	'['            reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	'|'            reduce using rule 21
	','            reduce using rule 21


State 93

	Conts -> Expr ',' . Conts                           (rule 45)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	']'            reduce using rule 44
	'{'            shift, and enter state 33

	Expr           goto state 47
	Conts          goto state 98

State 94

	Expr -> '{' Expr '|' . PredList '}'                 (rule 43)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 95
	PredList       goto state 96
	Pred           goto state 97

State 95

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)
	Pred -> Expr . '<-' Expr                            (rule 50)
	Pred -> Expr .                                      (rule 51)

	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<-'           shift, and enter state 106
	'<='           shift, and enter state 58
	'>='           shift, and enter state 59
	':'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<'            shift, and enter state 62
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'}'            reduce using rule 51
	','            reduce using rule 51


State 96

	Expr -> '{' Expr '|' PredList . '}'                 (rule 43)

	'}'            shift, and enter state 105


State 97

	PredList -> Pred .                                  (rule 48)
	PredList -> Pred . ',' PredList                     (rule 49)

	'}'            reduce using rule 48
	','            shift, and enter state 104


State 98

	Conts -> Expr ',' Conts .                           (rule 45)

	']'            reduce using rule 45


State 99

	Expr -> '(' Expr ',' Expr . ')'                     (rule 22)
	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<='           shift, and enter state 58
	'>='           shift, and enter state 59
	':'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<'            shift, and enter state 62
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	')'            shift, and enter state 103


State 100

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> if Expr then Expr . else Expr               (rule 33)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	else           shift, and enter state 102
	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<='           shift, and enter state 58
	'>='           shift, and enter state 59
	':'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<'            shift, and enter state 62
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68


State 101

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> lam string '->' Expr .                      (rule 34)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	lam            reduce using rule 34
	string         reduce using rule 34
	ident          reduce using rule 34
	int            reduce using rule 34
	float          reduce using rule 34
	true           reduce using rule 34
	false          reduce using rule 34
	return         reduce using rule 34
	if             reduce using rule 34
	then           reduce using rule 34
	else           reduce using rule 34
	'++'           reduce using rule 34
	'=='           reduce using rule 34
	'!='           reduce using rule 34
	'!!'           reduce using rule 34
	'<-'           reduce using rule 34
	'<='           reduce using rule 34
	'>='           reduce using rule 34
	':'            reduce using rule 34
	'>'            reduce using rule 34
	'<'            reduce using rule 34
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'('            reduce using rule 34
	')'            reduce using rule 34
	'['            reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	'|'            reduce using rule 34
	','            reduce using rule 34


State 102

	Expr -> if Expr then Expr else . Expr               (rule 33)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 109

State 103

	Expr -> '(' Expr ',' Expr ')' .                     (rule 22)

	lam            reduce using rule 22
	string         reduce using rule 22
	ident          reduce using rule 22
	int            reduce using rule 22
	float          reduce using rule 22
	true           reduce using rule 22
	false          reduce using rule 22
	return         reduce using rule 22
	if             reduce using rule 22
	then           reduce using rule 22
	else           reduce using rule 22
	'++'           reduce using rule 22
	'=='           reduce using rule 22
	'!='           reduce using rule 22
	'!!'           reduce using rule 22
	'<-'           reduce using rule 22
	'<='           reduce using rule 22
	'>='           reduce using rule 22
	':'            reduce using rule 22
	'>'            reduce using rule 22
	'<'            reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            reduce using rule 22
	'/'            reduce using rule 22
	'%'            reduce using rule 22
	'^'            reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	'['            reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	'|'            reduce using rule 22
	','            reduce using rule 22


State 104

	PredList -> Pred ',' . PredList                     (rule 49)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 95
	PredList       goto state 108
	Pred           goto state 97

State 105

	Expr -> '{' Expr '|' PredList '}' .                 (rule 43)

	lam            reduce using rule 43
	string         reduce using rule 43
	ident          reduce using rule 43
	int            reduce using rule 43
	float          reduce using rule 43
	true           reduce using rule 43
	false          reduce using rule 43
	return         reduce using rule 43
	if             reduce using rule 43
	then           reduce using rule 43
	else           reduce using rule 43
	'++'           reduce using rule 43
	'=='           reduce using rule 43
	'!='           reduce using rule 43
	'!!'           reduce using rule 43
	'<-'           reduce using rule 43
	'<='           reduce using rule 43
	'>='           reduce using rule 43
	':'            reduce using rule 43
	'>'            reduce using rule 43
	'<'            reduce using rule 43
	'+'            reduce using rule 43
	'-'            reduce using rule 43
	'*'            reduce using rule 43
	'/'            reduce using rule 43
	'%'            reduce using rule 43
	'^'            reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'['            reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	'|'            reduce using rule 43
	','            reduce using rule 43


State 106

	Pred -> Expr '<-' . Expr                            (rule 50)

	lam            shift, and enter state 23
	string         shift, and enter state 24
	ident          shift, and enter state 25
	int            shift, and enter state 26
	float          shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	if             shift, and enter state 30
	'('            shift, and enter state 31
	'['            shift, and enter state 32
	'{'            shift, and enter state 33

	Expr           goto state 107

State 107

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)
	Pred -> Expr '<-' Expr .                            (rule 50)

	'++'           shift, and enter state 54
	'=='           shift, and enter state 55
	'!='           shift, and enter state 56
	'!!'           shift, and enter state 57
	'<='           shift, and enter state 58
	'>='           shift, and enter state 59
	':'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<'            shift, and enter state 62
	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	'%'            shift, and enter state 67
	'^'            shift, and enter state 68
	'}'            reduce using rule 50
	','            reduce using rule 50


State 108

	PredList -> Pred ',' PredList .                     (rule 49)

	'}'            reduce using rule 49


State 109

	Expr -> Expr . '+' Expr                             (rule 24)
	Expr -> Expr . '-' Expr                             (rule 25)
	Expr -> Expr . '*' Expr                             (rule 26)
	Expr -> Expr . '/' Expr                             (rule 27)
	Expr -> Expr . '^' Expr                             (rule 28)
	Expr -> Expr . '%' Expr                             (rule 29)
	Expr -> Expr . ':' Expr                             (rule 30)
	Expr -> Expr . '++' Expr                            (rule 31)
	Expr -> if Expr then Expr else Expr .               (rule 33)
	Expr -> Expr . '<' Expr                             (rule 35)
	Expr -> Expr . '>' Expr                             (rule 36)
	Expr -> Expr . '<=' Expr                            (rule 37)
	Expr -> Expr . '>=' Expr                            (rule 38)
	Expr -> Expr . '==' Expr                            (rule 39)
	Expr -> Expr . '!=' Expr                            (rule 40)
	Expr -> Expr . '!!' Expr                            (rule 42)

	lam            reduce using rule 33
	string         reduce using rule 33
	ident          reduce using rule 33
	int            reduce using rule 33
	float          reduce using rule 33
	true           reduce using rule 33
	false          reduce using rule 33
	return         reduce using rule 33
	if             reduce using rule 33
	then           reduce using rule 33
	else           reduce using rule 33
	'++'           shift, and enter state 54
			(reduce using rule 33)

	'=='           shift, and enter state 55
			(reduce using rule 33)

	'!='           shift, and enter state 56
			(reduce using rule 33)

	'!!'           shift, and enter state 57
			(reduce using rule 33)

	'<-'           reduce using rule 33
	'<='           shift, and enter state 58
			(reduce using rule 33)

	'>='           shift, and enter state 59
			(reduce using rule 33)

	':'            shift, and enter state 60
			(reduce using rule 33)

	'>'            shift, and enter state 61
			(reduce using rule 33)

	'<'            shift, and enter state 62
			(reduce using rule 33)

	'+'            shift, and enter state 63
			(reduce using rule 33)

	'-'            shift, and enter state 64
			(reduce using rule 33)

	'*'            shift, and enter state 65
			(reduce using rule 33)

	'/'            shift, and enter state 66
			(reduce using rule 33)

	'%'            shift, and enter state 67
			(reduce using rule 33)

	'^'            shift, and enter state 68
			(reduce using rule 33)

	'('            reduce using rule 33
	')'            reduce using rule 33
	'['            reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	'|'            reduce using rule 33
	','            reduce using rule 33


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 52
Number of terminals: 43
Number of non-terminals: 11
Number of states: 110
